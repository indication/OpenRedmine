language: android
sudo: false
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

notifications:
  email: false
  webhooks: "https://zapier.com/hooks/catch/opzg6m/"

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # Note that the tools section appears twice on purpose as its required to get the newest Android SDK tools
    - tools
    - platform-tools
    - tools
    # The BuildTools version used by your project
    - build-tools-25.0.0
    - extra-android-support
    - extra-google-m2repository
    - extra-android-m2repository
    # emulator(s)
    - android-22
    - sys-img-armeabi-v7a-android-22
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
#    - 'android-sdk-license-5be876d5'
    - 'android-sdk-license-c81a61d9'
#    - 'android-googletv-license-99eda7fb'
    - 'google-gdk-license-9529f459'

before_script:
  # Emulator Management: Create, Start and Wait
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  # Setup build envrionment
  - openssl aes-256-cbc -K $encrypted_7fcdb5fbc52e_key -iv $encrypted_7fcdb5fbc52e_iv -in external/localsettings.tar.gz.enc -out localsettings.tar.gz -d
  - tar xzf localsettings.tar.gz && mv id_edca ~/.ssh/ && mv id_config ~/.ssh/config
  # fix gradle license errors
  - mkdir -p "/usr/local/android-sdk/licenses"
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "/usr/local/android-sdk/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "/usr/local/android-sdk/licenses/android-sdk-preview-license"

script:
  - ./gradlew build connectedCheck
  - ./gradlew assembleDebug assembleRelease

after_success:
  - export BUILD_RESULT="success"

after_failure:
  - export BUILD_RESULT="ERRORED"

after_script:
  - ./external/report.sh
