language: android
sudo: false
dist: precise
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
env:
  global:
    - ANDROID_BUILD_TOOL_VERSION=30.0.0
    - ANDROID_COMPILE_SDK_VERSION=30
    - ANDROID_TARGET_SDK_VERSION=30
notifications:
  email: false
  webhooks: "https://zapier.com/hooks/catch/opzg6m/"

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # Note that the tools section appears twice on purpose as its required to get the newest Android SDK tools
    - tools
    - platform-tools
    - tools
    # The BuildTools version used by your project
    - extra-android-support
    - extra-google-m2repository
    - extra-android-m2repository

  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-c81a61d9'
    - 'android-sdk-license-e6a904e8'
#    - 'android-googletv-license-99eda7fb'
    - 'google-gdk-license-9529f459'
    - 'android-sdk-license-5be876d5'

before_install:
  - touch $HOME/.android/repositories.cfg
  - yes | sdkmanager "platforms;android-$ANDROID_COMPILE_SDK_VERSION"
  - yes | sdkmanager "build-tools;$ANDROID_BUILD_TOOL_VERSION"

before_script:
  # Setup build envrionment
  - openssl aes-256-cbc -K $encrypted_7fcdb5fbc52e_key -iv $encrypted_7fcdb5fbc52e_iv -in external/localsettings.tar.gz.enc -out localsettings.tar.gz -d
  - tar xzf localsettings.tar.gz && mv id_edca ~/.ssh/ && mv id_config ~/.ssh/config
  # fix gradle license errors
  - mkdir -p "/usr/local/android-sdk/licenses"
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "/usr/local/android-sdk/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd\nd77a45cfde8d8db5135a9d01fce4bdfa23a033dd" > "/usr/local/android-sdk/licenses/android-sdk-preview-license"

script:
  - ./gradlew lintRelease assembleDebug assembleRelease bundleDebug bundleRelease

after_success:
  - export BUILD_RESULT="success"

after_failure:
  - export BUILD_RESULT="ERROR"

after_script:
  - ./external/report.sh
